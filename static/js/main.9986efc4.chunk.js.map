{"version":3,"sources":["Task5JunPrejunJun+/Navbar.module.css","Task5JunPrejunJun+/Task5.module.css","Task4/Task4.module.css","components/Ava/ava.module.css","components/Name/name.module.css","components/Message/message.module.css","components/Time/time.module.css","components/Ava/Ava.tsx","components/Name/Name.tsx","components/Message/Message.tsx","components/Time/Time.tsx","Task1/Task1.tsx","Task2/MyAffairs.tsx","Task2/Task2.tsx","Task3/Task3.tsx","Task3/Task3.source.tsx","common/Checkbox.tsx","common/InputCustom.tsx","common/ButtonCustom.tsx","Task4/Task4.tsx","Task4/Task4.source.tsx","Task5JunPrejunJun+/PreJunior.tsx","common/EditableSpan.tsx","common/Radio.tsx","common/Select.tsx","Task5JunPrejunJun+/Junior.tsx","Task5JunPrejunJun+/JuniorPlus.tsx","Task5JunPrejunJun+/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Ava","href","src","alt","Name","props","name","Message","sms","Time","time","Task1","className","a","ava","n","m","message","t","MyAffairs","s","back","main","title","affairs","map","li","key","id","ots","priority","Button","btn1","onClick","removeAffair","variant","color","size","ButtonGroup","btn","changeFilter","App2","useState","setAffairs","filter","setFilter","AffairsFor","filteredAffairs","value","Task3","setName","placeholder","onChange","e","currentTarget","onKeyPress","charCode","trim","addName","alert","arrayName","length","App3","arr","setArr","App","newNames","v1","console","log","CheckboxCustom","Checkbox","inputProps","InputCustom","TextField","label","ButtonCustom","Task4","numb","App4","PreJunior","EditableSpan","editMode","changeValueInput","onKeyPressEnter","autoFocus","onBlur","offEditMode","onDoubleClick","onEditMode","Radio","radioElement","radioArr","c","htmlFor","type","checked","status","changeStatus","SelectI","optionElement","optionValue","el","setSelected","Junior","setValue","setEditMode","selected","radio","setRadio","Select","newRadioArray","r","JuniorPlus","Navbar","styles","container","div","activeClassName","isActive","link","to","isHidden","setIsHidden","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9986efc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__BOCDJ\",\"link\":\"Navbar_link__TxlL_\",\"div\":\"Navbar_div__7KmOh\",\"isActive\":\"Navbar_isActive__1rvnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Task5_App__ylnXo\",\"numb\":\"Task5_numb__2co7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Task4_App__3RRnB\",\"numb\":\"Task4_numb__2d6Bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ava_ava__2NvWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"name_name__34Jxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__2hYW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"time_time__2zBgA\"};","import React from \"react\";\r\n\r\nconst Ava = () => {\r\n    return (\r\n        <div>\r\n            <a href=\"https://vk.com/artermakov\"><img src=\"https://sun9-2.userapi.com/c854120/v854120619/65adc/ZhB2MdQPN8o.jpg\" alt=\"ava\"/></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ava;","import React from 'react';\r\n\r\ntype PropsTypeName = {\r\n    name: string\r\n}\r\nconst Name = (props: PropsTypeName) => {\r\n    return (\r\n        <div>\r\n            <a href=\"https://vk.com/artermakov\">{props.name}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name;","import React from \"react\";\r\ntype PropsTypeMessage = {\r\n    sms: string | number\r\n}\r\nconst Message = (props:PropsTypeMessage) => {\r\n    return (\r\n        <div>\r\n            {props.sms}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\ntype PropsTypeTime = {\r\n    time:string | number\r\n}\r\nconst Time = (props:PropsTypeTime) => {\r\n    return (\r\n        <div>\r\n            {props.time}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;","import a from \"../components/Ava/ava.module.css\";\r\nimport Ava from \"../components/Ava/Ava\";\r\nimport n from \"../components/Name/name.module.css\";\r\nimport Name from \"../components/Name/Name\";\r\nimport m from \"../components/Message/message.module.css\";\r\nimport Message from \"../components/Message/Message\";\r\nimport t from \"../components/Time/time.module.css\";\r\nimport Time from \"../components/Time/Time\";\r\nimport React from \"react\";\r\nconst Task1 = () => {\r\n    return (\r\n        <div>\r\n            <h3>Task1</h3>\r\n            <div className=\"app-wrapper\">\r\n                <div className={a.ava}>\r\n                    <Ava/>\r\n                </div>\r\n                <div className={n.name}>\r\n                    <Name name=\"Артём\"/>\r\n                </div>\r\n                <div className={m.message}>\r\n                    <Message sms=\"Привет, не бей палками за говнокод :)\"/>\r\n                </div>\r\n                <div className={t.time}>\r\n                    <Time time=\"Только что\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task1;","import React from 'react';\r\nimport s from \"./MyAffairs.module.css\"\r\nimport {Button, ButtonGroup} from \"@material-ui/core\";\r\nimport {FilterValue} from \"./Task2\";\r\n\r\nexport type AffairsType = {\r\n    id: number\r\n    name: string\r\n    priority: string\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    affairs: Array<AffairsType>\r\n    removeAffair: (id: number) => void\r\n    changeFilter: (value: FilterValue) => void\r\n}\r\n\r\n\r\nfunction MyAffairs(props: PropsType) {\r\n\r\n    return (\r\n        <div className={s.back}>\r\n            <div className={s.main}>\r\n                <div>\r\n                    <h3>{props.title}</h3>\r\n                </div>\r\n                <ul>\r\n                    {props.affairs.map((a) => {\r\n                        return (\r\n\r\n                            <div className={s.li} key={a.id}><u>НАЗВАНИЕ:</u> <strong>{a.name}</strong>\r\n                                <u className={s.ots}>ПРИОРИТЕТ:</u><strong>{a.priority}</strong>\r\n                                <Button className={s.btn1} onClick={() => {props.removeAffair(a.id)}} variant={\"contained\"} color={\"secondary\"} size={\"small\"}>х\r\n                                </Button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                <div>\r\n                    <ButtonGroup>\r\n                        <Button className={s.btn} onClick={() => {props.changeFilter(\"all\")}} color={\"primary\"} variant={\"contained\"}>all</Button>\r\n                        <Button className={s.btn} onClick={() => {props.changeFilter(\"low\")}} color={\"primary\"} variant={\"contained\"}>low</Button>\r\n                        <Button className={s.btn} onClick={() => {props.changeFilter(\"middle\")}} color={\"primary\"} variant={\"contained\"}>middle</Button>\r\n                        <Button className={s.btn} onClick={() => {props.changeFilter(\"hight\")}} color={\"primary\"} variant={\"contained\"}>hight</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyAffairs;","import React, {useState} from \"react\";\r\nimport MyAffairs, {AffairsType} from \"./MyAffairs\";\r\n\r\nexport type FilterValue = \"all\" | \"low\" | \"middle\" | \"hight\";\r\n\r\nexport function App2() {\r\n    let [affairs, setAffairs] = useState<Array<AffairsType>>([\r\n        {id: 1, name: \"Учёба\", priority: \"hight\"},\r\n        {id: 2, name: \"Работа\", priority: \"middle\"},\r\n        {id: 3, name: \"Спорт\", priority: \"hight\"},\r\n        {id: 4, name: \"Астрономия\", priority: \"low\"},\r\n        {id: 5, name: \"Сериалы\", priority: \"low\"},\r\n    ]);\r\n\r\n    let [filter, setFilter] = useState<FilterValue>(\"all\")\r\n\r\n    function removeAffair(id: number) {\r\n        let filteredAffairs = affairs.filter( a => a.id !== id)\r\n        setAffairs(filteredAffairs)\r\n    }\r\n\r\n    function changeFilter(value:FilterValue){\r\n        setFilter(value);\r\n    }\r\n\r\n    let AffairsFor = affairs;\r\n    if(filter === \"low\"){\r\n        AffairsFor = affairs.filter( a => a.priority === \"low\" );\r\n    }\r\n    if(filter === \"middle\"){\r\n        AffairsFor = affairs.filter( a => a.priority === \"middle\" );\r\n    }\r\n    if(filter === \"hight\"){\r\n        AffairsFor = affairs.filter( a => a.priority === \"hight\" );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MyAffairs title=\"Список приоритетов\"\r\n                       affairs={AffairsFor}\r\n                       removeAffair={removeAffair}\r\n                       changeFilter={changeFilter}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    title: string\r\n    addName: (name: string) => void\r\n    arrayName: Array<any>\r\n}\r\n\r\nexport function Task3(props: PropsType) {\r\n    const [name, setName] = useState(\"\");\r\n\r\n\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13 && name.trim() !== \"\") {\r\n            props.addName(name)\r\n            alert(\"Привет, \" + name + \" !\")\r\n            setName(\"\");\r\n        }\r\n    }\r\n    const onClickForButton = () => {\r\n        if (name.trim() !== \"\") {\r\n            props.addName(name)\r\n            alert(\"Привет, \" + name + \" !\")\r\n            setName(\"\");\r\n        }\r\n    }\r\n    const setNameEvent = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>{props.title}</h3>\r\n            </div>\r\n            <div>\r\n                Привет, введи своё имя: <br/>\r\n                <input value={name}\r\n                           placeholder=\"Имя\"\r\n                           onChange={setNameEvent}\r\n                           onKeyPress={onKeyPressEnter}\r\n                />\r\n\r\n                <button onClick={onClickForButton}>Добавить</button>\r\n                <br/>\r\n                <span>\r\n                    Количество имён в массиве: {props.arrayName.length}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport s from \"../Task5JunPrejunJun+/Task5.module.css\";\r\nimport {Task3} from \"./Task3\";\r\n\r\ntype NameType1 =  {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nexport function App3() {\r\n    let [arr, setArr] = useState<Array<NameType1>>([]);\r\n    function addName(name: string) {\r\n        let newName = {id: v1(), name: name };\r\n        let newNames = [newName, ...arr];\r\n        setArr(newNames);\r\n        console.log(arr);\r\n    }\r\n    return(\r\n        <div className={s.App}>\r\n            <Task3 title=\"ЗАДАНИЕ 3\"\r\n                   addName={addName}\r\n                   arrayName={arr}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\nexport const CheckboxCustom = (props:any) => {\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n        </div>\r\n    )\r\n}","import {TextField} from \"@material-ui/core\";\nimport React, {ChangeEvent, KeyboardEvent} from \"react\";\n\ntype InputCustomType = {\n    value: string\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\n    onKeyPress?: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\nexport const InputCustom = (props: InputCustomType) => {\n    return <TextField id=\"outlined-basic\"\n                      label=\"Ваше имя?\"\n                      variant=\"outlined\"\n                      value={props.value}\n                      onChange={props.onChange}\n                      onKeyPress={props.onKeyPress}\n    />\n}","import {Button} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype ButtonCustomType = {\r\n    onClick?: () => void\r\n    title?: string\r\n    className?: string\r\n}\r\n\r\nexport const ButtonCustom = (props:ButtonCustomType) => {\r\n    return <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>{props.title}</Button>\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./Task4.module.css\"\r\nimport {CheckboxCustom} from \"../common/Checkbox\";\r\nimport {InputCustom} from \"../common/InputCustom\";\r\nimport {ButtonCustom} from \"../common/ButtonCustom\";\r\n\r\n\r\ntype PropsType = {\r\n    title: string\r\n    addName: (name: string) => void\r\n    arrayName: Array<any>\r\n}\r\n\r\nexport function Task4(props: PropsType) {\r\n    const [name, setName] = useState(\"\");\r\n\r\n\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13 && name.trim() !== \"\") {\r\n            props.addName(name)\r\n            alert(\"Привет, \" + name + \" !\")\r\n            setName(\"\");\r\n        }\r\n    }\r\n    const onClickForButton = () => {\r\n        if (name.trim() !== \"\") {\r\n            props.addName(name)\r\n            alert(\"Привет, \" + name + \" !\")\r\n            setName(\"\");\r\n        }\r\n    }\r\n    const setNameEvent = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3 className={s.title}>{props.title}</h3>\r\n            </div>\r\n            <div>\r\n                Привет, введи своё имя: <br/>\r\n\r\n                <InputCustom value={name}\r\n                       onChange={setNameEvent}\r\n                       onKeyPress={onKeyPressEnter} />\r\n\r\n                <ButtonCustom onClick={onClickForButton} title={\"Добавить\"}/>\r\n                <br/>\r\n                <span>\r\n                    Количество имён в массиве: <span className={s.numb}>{props.arrayName.length}</span>\r\n                </span>\r\n                <br/>\r\n                <CheckboxCustom/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport s from \"../Task5JunPrejunJun+/Task5.module.css\";\r\nimport {Task4} from \"./Task4\";\r\n\r\ntype NameType2 =  {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nexport function App4() {\r\n    let [arr, setArr] = useState<Array<NameType2>>([]);\r\n    function addName(name: string) {\r\n        let newName = {id: v1(), name: name };\r\n        let newNames = [newName, ...arr];\r\n        setArr(newNames);\r\n        console.log(arr);\r\n    }\r\n    return(\r\n        <div className={s.App}>\r\n            <Task4 title=\"ЗАДАНИЕ 4\"\r\n                   addName={addName}\r\n                   arrayName={arr}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Task1 from \"../Task1/Task1\";\r\nimport {App2} from \"../Task2/Task2\";\r\nimport {App3} from \"../Task3/Task3.source\";\r\nimport {App4} from \"../Task4/Task4.source\";\r\n\r\nfunction PreJunior() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>PreJunior</h1>\r\n            <Task1/>\r\n            <hr/>\r\n            <div>\r\n                <h3>Task2</h3>\r\n                <div>\r\n                    <App2/>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <div>\r\n                <h3>Task3</h3>\r\n                <App3/>\r\n            </div>\r\n            <hr/>\r\n            <div>\r\n                <h3>Task4</h3>\r\n                <App4/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype EditableSpanType = {\r\n    editMode: boolean\r\n    value: string\r\n    changeValueInput: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onEditMode: () => void\r\n    onKeyPressEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    offEditMode: () => void\r\n}\r\n\r\n\r\nconst EditableSpan = (props: EditableSpanType) => {\r\n\r\n    return (\r\n        props.editMode ? <TextField\r\n                value={props.value}\r\n                onChange={props.changeValueInput}\r\n                onKeyPress={props.onKeyPressEnter}\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                label={\"Введите значение\"}\r\n                autoFocus={true}\r\n                onBlur={props.offEditMode}\r\n            />\r\n            : <span onDoubleClick={props.onEditMode}>{props.value}</span>\r\n    )\r\n}\r\n\r\nexport default EditableSpan;","import React from \"react\";\r\nimport {RadioTypeArr} from \"../Task5JunPrejunJun+/Junior\";\r\n\r\ntype RadioTypeProps = {\r\n    radioArr: Array<RadioTypeArr>\r\n    changeStatus: (id: string) => void\r\n}\r\n\r\nconst Radio = (props: RadioTypeProps) => {\r\n    let radioElement = props.radioArr.map(c => {\r\n        const onChangeHandler = () => {\r\n            props.changeStatus(c.id);\r\n        }\r\n        return (\r\n            <div key={c.id}>\r\n                <label htmlFor={c.id}>{c.value}</label>\r\n                <input type=\"radio\"\r\n                       value={c.value}\r\n                       name={c.name}\r\n                       checked={c.status}\r\n                       onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {radioElement}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Radio;","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from \"react\";\r\nimport {OptionValueType} from \"../Task5JunPrejunJun+/Junior\";\r\n\r\ntype SelectType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement> &\r\n    {\r\n        optionValue: Array<OptionValueType>\r\n        setSelected: (value: string) => void\r\n        title: string\r\n    }\r\n\r\nconst SelectI = (props: SelectType) => {\r\n\r\n    const optionElement = props.optionValue.map(el => {\r\n        return (\r\n            <option key={el.id}>\r\n                {el.title}\r\n            </option>\r\n        )\r\n    })\r\n\r\n    const changeSelect = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.setSelected(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <select value={props.title} onChange={changeSelect}>\r\n                {optionElement}\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectI;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport EditableSpan from \"../common/EditableSpan\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {v1} from \"uuid\";\r\nimport Radio from \"../common/Radio\";\r\nimport SelectI from \"../common/Select\";\r\n\r\nexport type OptionValueType = {\r\n    id: string\r\n    title: string\r\n}\r\n\r\nexport type RadioTypeArr = {\r\n    id: string\r\n    name: string\r\n    value: string\r\n    status: boolean\r\n}\r\n\r\nconst optionValue = [\r\n    {id: v1(), title: 'HELLO'},\r\n    {id: v1(), title: 'DEAR'},\r\n    {id: v1(), title: 'IGNAT'},\r\n]\r\n\r\nfunction Junior() {\r\n\r\n    const [value, setValue] = useState(\"ИЗМЕНИТЬ ДВОЙНЫМ КЛИКОМ\")\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selected, setSelected] = useState('HELLO')\r\n    const [radio, setRadio] = useState([\r\n            {id: v1(), name: 'radio', value: 'one', status: false},\r\n            {id: v1(), name: 'radio', value: 'two', status: true},\r\n            {id: v1(), name: 'radio', value: 'three', status: false},\r\n            {id: v1(), name: 'radio', value: 'four', status: false},\r\n            {id: v1(), name: 'radio', value: 'five', status: false},\r\n        ]\r\n    )\r\n    const changeValueInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const onKeyPressEnter = (e: any) => {\r\n        if (e.charCode === 13 && value !== \"\") {\r\n            offEditMode()\r\n        }\r\n    }\r\n    const setState = () => {\r\n        if (value === \"\") {\r\n            alert(\"Строка не может быть пустой!\");\r\n        } else {\r\n            setValue(value);\r\n            setEditMode(false);\r\n        }\r\n    }\r\n    const changeStatus = (id: string) => {\r\n        const newRadioArray = radio.map(r => {\r\n            if (r.id === id) {\r\n                return {...r, status: true};\r\n            } else {\r\n                return {...r, status: false}\r\n            }\r\n        })\r\n        setRadio(newRadioArray);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Junior</h1>\r\n            <div>\r\n                <h3>Task6</h3>\r\n                <EditableSpan value={value}\r\n                              editMode={editMode}\r\n                              changeValueInput={changeValueInput}\r\n                              onEditMode={onEditMode}\r\n                              onKeyPressEnter={onKeyPressEnter}\r\n                              offEditMode={offEditMode}\r\n\r\n                />\r\n            </div>\r\n            <Button onClick={setState}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n            >SAVE</Button>\r\n            <hr/>\r\n            <div>\r\n                <SelectI optionValue={optionValue}\r\n                        title={selected}\r\n                        setSelected={setSelected}\r\n                />\r\n                <Radio radioArr={radio} changeStatus={changeStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <h1>JuniorPlus</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React from \"react\";\r\nimport \".//CSS.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Navbar.module.css'\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    // className={ styles.isActive ? styles.isActive : styles.link }\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.div}><NavLink activeClassName={styles.isActive} className={styles.link} to={\"/prejunior\"} >PreJunior</NavLink></div>\r\n            <div className={styles.div}><NavLink activeClassName={styles.isActive} className={styles.link} to={\"/junior\"} >Junior</NavLink></div>\r\n            <div className={styles.div}><NavLink activeClassName={styles.isActive} className={styles.link} to={\"/juniorplus\"} >JuniorPlus</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\nimport './App.css';\nimport \"./Task5JunPrejunJun+/CSS.css\"\nimport s from \"./Task5JunPrejunJun+/Task5.module.css\"\nimport PreJunior from \"./Task5JunPrejunJun+/PreJunior\";\nimport Junior from \"./Task5JunPrejunJun+/Junior\";\nimport JuniorPlus from \"./Task5JunPrejunJun+/JuniorPlus\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Navbar from \"./Task5JunPrejunJun+/Navbar\";\n\nfunction App () {\n\n    const [isHidden, setIsHidden] = useState(false)\n\n    const toggle = ()=> {\n        setIsHidden(!isHidden)\n    }\n\n    return (\n        <HashRouter>\n            <div className={s.App}>\n                <input type=\"checkbox\" id=\"hmt\" className=\"hidden-menu-ticker\" onClick={toggle}/>\n                <label className=\"btn-menu\" htmlFor=\"hmt\">\n                    <span className=\"first\"/>\n                    <span className=\"second\"/>\n                    <span className=\"third\"/>\n                </label>\n                { isHidden && <Navbar/> }\n                <div>\n                    <Route path=\"/prejunior\" component={PreJunior}/>\n                    <Route path=\"/junior\" component={Junior}/>\n                    <Route path=\"/juniorplus\" component={JuniorPlus}/>\n                </div>\n            </div>\n        </HashRouter>\n    )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}